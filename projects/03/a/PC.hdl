// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with increment, load, and reset modes.
 * if      (inc(t))   out(t+1) = out(t) + 1
 * else if (load(t))  out(t+1) = in(t)
 * else if (reset(t)) out(t+1) = 0
 * else               out(t+1) = out(t)
 *
 * To select a mode, assert the relevant control bit,
 * and de-assert the other two bits. 
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];

    PARTS:
    /* reset -> load -> incの順に優先する
     * sel 00 = preserve
     * sel 01 = increment
     * sel 10 = load
     * sel 11 = reset
     * | inc | load | reset | sel1 | sel0 |
     * |-----|------|-------|------|------|
     * | 0   | 0    | 0     | 0    | 0    |
     * | 1   | 0    | 0     | 0    | 1    |
     * | 0   | 1    | 0     | 1    | 0    |
     * | 0   | 0    | 1     | 1    | 1    |
     * | 1   | 1    | 0     | 1    | 0    |
     * | 1   | 0    | 1     | 1    | 1    |
     * | 0   | 1    | 1     | 1    | 1    |
     * | 1   | 1    | 1     | 1    | 1    |
     */
    Not(in=load, out=notLoad);
    And(a=inc, b=notLoad, out=incAndNotLoad);
    Or(a=incAndNotLoad, b=reset, out=sel0);
    Or(a=load, b=reset, out=sel1);
    Add16(a=prev, b[0]=true, b[1..15]=false, out=incremented);
    Mux4Way16(a=prev, b=incremented,
              c=in, d[0..15]=false,
              sel[0]=sel0, sel[1]=sel1, out=selected);
    Register(in=selected, load=true, out=out, out=prev);
}
